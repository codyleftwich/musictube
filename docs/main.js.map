{"version":3,"sources":["./src/app/shared/time-input/time-input.component.ts","./src/app/shared/time-input/time-input.component.html","./src/environments/environment.ts","./src/app/shared/nav/nav.component.ts","./src/app/shared/nav/nav.component.html","./src/app/youtube-video-wrapper/youtube-video-wrapper.component.ts","./src/app/youtube-video-wrapper/youtube-video-wrapper.component.html","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/app.module.ts","./src/app/metronome/metronome.component.ts","./src/app/metronome/metronome.component.html","./src/app/youtube-video-wrapper/youtube-video/youtube-video.component.ts","./src/app/youtube-video-wrapper/youtube-video/youtube-video.component.html","./src/app/youtube-video-wrapper/youtube-video-controls/youtube-video-controls.component.ts","./src/app/youtube-video-wrapper/youtube-video-controls/youtube-video-controls.component.html","./src/app/youtube-video-wrapper/youtube-video-wrapper.module.ts","./src/app/youtube-video-wrapper/youtube-loop-controls/youtube-loop-controls.component.ts","./src/app/youtube-video-wrapper/youtube-loop-controls/youtube-loop-controls.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-time-input',\r\n  templateUrl: './time-input.component.html',\r\n  styleUrls: ['./time-input.component.css']\r\n})\r\nexport class TimeInputComponent implements OnInit {\r\n  /**\r\n   * The input element that represents seconds.\r\n   */\r\n  @ViewChild(\"secondsInput\", { static: true }) private _secondInput: ElementRef;\r\n\r\n  /**\r\n   * The input element that represents minutes.\r\n   */\r\n  @ViewChild(\"minutesInput\", { static: true }) private _minutesInput: ElementRef;\r\n\r\n  /**\r\n   * The input element that represents hours.\r\n   */\r\n  @ViewChild(\"hoursInput\", { static: true }) private _hoursInput: ElementRef;\r\n\r\n  /**\r\n   * Private backing for fieldsEnabled\r\n   */\r\n  private _fieldsEnabled: boolean = true;\r\n\r\n  /**\r\n   * Determines whether the input fields shoulds be enabled or not.\r\n   */\r\n  @Input()\r\n  get fieldsEnabled(): boolean {\r\n    return this._fieldsEnabled;\r\n  }\r\n  set fieldsEnabled(value: boolean) {\r\n    this._fieldsEnabled = value;\r\n  }\r\n\r\n  /**\r\n   * Backing data for isReadOnly\r\n   */\r\n  private _isReadOnly: boolean = false;\r\n\r\n  /**\r\n   * Flag for if the field should be readonly.\r\n   */\r\n  @Input()\r\n  set isReadOnly(value: boolean) {\r\n    this._isReadOnly = value;\r\n  }\r\n  get isReadOnly(): boolean {\r\n    return this._isReadOnly;\r\n  }\r\n\r\n  /**\r\n   * The input type to assign to the inputs\r\n   */\r\n  inputType: string;\r\n\r\n  /**\r\n   * EventEmitter used the user changes on of the inputs. Emits the time in seconds.\r\n   */\r\n  @Output() timeInputChangedEvent = new EventEmitter<number>();\r\n\r\n  /**\r\n   * Initialization code.\r\n   */\r\n  ngOnInit(): void {\r\n    if (this.isReadOnly) {\r\n      this.inputType = \"text\";\r\n    }\r\n    else {\r\n      this.inputType = \"number\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the input values by calculating the hours, minutes, and leftover seconds.\r\n   *\r\n   * @param seconds The number of seconds to update the inputs to.\r\n   */\r\n  setInputValuesBySeconds(seconds: number): void {\r\n    this._hoursInput.nativeElement.value = Math.floor(seconds / 3600);\r\n    this._minutesInput.nativeElement.value = Math.floor(seconds / 60 % 60);\r\n    this._secondInput.nativeElement.value = Math.floor(seconds % 60);\r\n  }\r\n\r\n  /**\r\n   * @returns The conversion of the inputs to the total number of seconds.\r\n   */\r\n  getSeconds(): number {\r\n    let result = 0;\r\n\r\n    result += Number(this._hoursInput.nativeElement.value) * 3600;\r\n    result += Number(this._minutesInput.nativeElement.value) * 60;\r\n    result += Number(this._secondInput.nativeElement.value);\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Event handler for when one of the input fields are changed.\r\n   */\r\n  onInputChange() {\r\n    this.timeInputChangedEvent.emit(this.getSeconds());\r\n  }\r\n}\r\n","<mat-form-field class=\"number-input\" appearance=\"fill\">\r\n    <mat-label>hour</mat-label>\r\n    <input #hoursInput matInput (change)=\"onInputChange()\" [disabled]=\"!fieldsEnabled\" [readonly]=\"isReadOnly\" min=\"0\"\r\n        max=\"999\" value=\"0\" pattern=\"[0-9]*\" [type]=\"inputType\">\r\n</mat-form-field>\r\n<mat-form-field class=\"number-input\" appearance=\"fill\">\r\n    <mat-label>min</mat-label>\r\n    <input #minutesInput matInput (change)=\"onInputChange()\" [disabled]=\"!fieldsEnabled\" [readonly]=\"isReadOnly\" min=\"0\"\r\n        max=\"60\" value=\"0\" pattern=\"[0-9]*\" [type]=\"inputType\">\r\n</mat-form-field>\r\n<mat-form-field class=\"number-input\" appearance=\"fill\">\r\n    <mat-label>sec</mat-label>\r\n    <input #secondsInput matInput (change)=\"onInputChange()\" [disabled]=\"!fieldsEnabled\" [readonly]=\"isReadOnly\" min=\"0\"\r\n        max=\"60\" value=\"0\" pattern=\"[0-9]*\" [type]=\"inputType\">\r\n</mat-form-field>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MatIconRegistry } from \"@angular/material/icon\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor(\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer) {\n    this.matIconRegistry.addSvgIcon(\n      \"github_logo\",\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\"assets/img/github-circle-white-transparent.svg\")\n    );\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <span>MusicTube</span>\n    <span class=\"spacer\"></span>\n    <button mat-raised-button>\n        <a href=\"https://github.com/codyleftwich/musictube\" target=\"_blank\" style=\"color: inherit;\">\n            <span class=\"mat-button-wrapper\">\n                <mat-icon svgIcon=\"github_logo\" aria-hidden=\"false\"></mat-icon>\n                <span style=\"margin-left: 4px; padding-top: 4px;\">GitHub</span>\n            </span>\n        </a>\n    </button>\n</mat-toolbar>","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { YoutubeLoopControlsComponent } from './youtube-loop-controls/youtube-loop-controls.component';\nimport { LoopSettings, VideoSettings } from './youtube-video-wrapper';\nimport { YoutubeVideoComponent } from './youtube-video/youtube-video.component';\n\n@Component({\n  selector: 'app-youtube-video-wrapper',\n  templateUrl: './youtube-video-wrapper.component.html',\n  styleUrls: ['./youtube-video-wrapper.component.css']\n})\nexport class YoutubeVideoWrapperComponent implements OnInit {\n  /**\n   * Object for the YoutubeVideoComponent.\n   */\n  @ViewChild(\"video\", { static: true }) private _video: YoutubeVideoComponent;\n\n  /**\n   * Object for the YoutubeLoopControlsComponent.\n   */\n  @ViewChild(\"loopController\", { static: true }) private _loopControl: YoutubeLoopControlsComponent;\n\n  /**\n   * The default video to be shown when the page is loaded.\n   */\n  private readonly _defaultVideoId: string = 'HyHNuVaZJ-k';\n\n  /**\n   * Video settings to be passed between the video and the video controller component.\n   */\n  videoSettings: VideoSettings;\n\n  /**\n   * Loop settings to pass between the video and the loop controller component.\n   */\n  loopSettings: LoopSettings;\n\n  /**\n   * Intialization code.\n   */\n  ngOnInit(): void {\n    this.videoSettings = {\n      videoId: this._defaultVideoId,\n      playbackSpeed: 1.0,\n      isPlaying: false,\n      hasStarted: false,\n      videoLength: 0\n    };\n\n    this.loopSettings = {\n      startTime: 0,\n      endTime: 0,\n      loopDelay: 0,\n      isLooping: false\n    };\n  }\n\n  /**\n   * Event handler for when video settings are changed by the video controller.\n   * @param videoSettings The updated video settings.\n   */\n  onVideoSettingsChanged(videoSettings: VideoSettings) {\n    if (!this.videoSettings.hasStarted) {\n      this.loopSettings.isLooping = false;\n      this._setLoopSettings(this.loopSettings);\n    }\n\n    this._setVideoSettings(videoSettings);\n  }\n\n  /**\n   * Event handler for when loop settings are changed by the loop controller.\n   * @param loopSettings The updated loop settings.\n   */\n  onLoopSettingsChanged(loopSettings: LoopSettings) {\n    this._setLoopSettings(loopSettings);\n  }\n\n  /**\n   * Event handler for getting the current time from the video to set as the start time for the loop\n   */\n  onCaptureStartTime() {\n    this.loopSettings.startTime = this._video.getCurrentTime();\n    this._setLoopSettings(this.loopSettings);\n  }\n\n  /**\n   * Event handler for getting the current time from the video to set as the end time for the loop\n   */\n  onCaptureEndTime() {\n    this.loopSettings.endTime = this._video.getCurrentTime();\n    this._setLoopSettings(this.loopSettings);\n  }\n\n  /**\n   * Sets the video settings across the components that share it.\n   * @param videoSettings The new value for the video settings.\n   */\n  private _setVideoSettings(videoSettings: VideoSettings) {\n    this.videoSettings = videoSettings;\n    this._video.videoSettings = this.videoSettings;\n    this._loopControl.videoSettings = this.videoSettings;\n  }\n\n  /**\n   * Sets the loop settings across the components that share it.\n   * @param loopSettings The new value for the loop settings.\n   */\n  private _setLoopSettings(loopSettings: LoopSettings) {\n    this.loopSettings = loopSettings;\n    this._video.loopSettings = this.loopSettings;\n    this._loopControl.loopSettings = this.loopSettings;\n  }\n}\n","<div fxFill fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n    <div class=\"mt-fill\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxFlex=\"0 1 calc(50%)\">\n        <div fxFlex=\"0 1 calc(50%)\" fxLayoutAlign=\"center center\">\n            <app-youtube-video [videoSettings]=\"videoSettings\" [loopSettings]=\"loopSettings\"\n                (onVideoSettingsChanged)=\"onVideoSettingsChanged($event)\"\n                (onLoopSettingsChanged)=\"onLoopSettingsChanged($event)\" class=\"mt-fill\" #video>\n            </app-youtube-video>\n        </div>\n        <div fxFlex=\"0 1 calc(50%)\" fxLayoutAlign=\"center center\">\n            <app-youtube-video-controls [videoSettings]=\"videoSettings\"\n                (onVideoSettingsChanged)=\"onVideoSettingsChanged($event)\" class=\"mt-fill\" #videoController>\n            </app-youtube-video-controls>\n        </div>\n    </div>\n    <div class=\"mt-fill\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxFlex=\"0 1 calc(50%)\">\n        <div fxFlex=\"0 1 calc(50%)\" fxLayoutAlign=\"center center\" style=\"max-height: 50%;\">\n            <!-- Help -->\n            <mat-card class=\"mt-card-layout\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                <markdown style=\"height: 100%; overflow-y: scroll;\" [src]=\"'assets/user_manual.md'\"></markdown>\n            </mat-card>\n        </div>\n        <div fxFlex=\"0 1 calc(50%)\" fxLayoutAlign=\"center center\">\n            <app-youtube-loop-controls [videoSettings]=\"videoSettings\" [loopSettings]=\"loopSettings\"\n                (onLoopSettingsChanged)=\"onLoopSettingsChanged($event)\" (captureStartTimeEvent)=\"onCaptureStartTime()\"\n                (captureEndTimeEvent)=\"onCaptureEndTime()\" class=\"mt-fill\" #loopController>\n            </app-youtube-loop-controls>\n        </div>\n    </div>\n</div>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { TimeInputComponent } from './time-input/time-input.component';\r\n\r\nconst ngModules = [\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatToolbarModule,\r\n];\r\n\r\n@NgModule({\r\n  declarations: [NavComponent, TimeInputComponent],\r\n  imports: [\r\n    ...ngModules,\r\n    CommonModule,\r\n    HttpClientModule\r\n  ],\r\n  exports: [\r\n    ...ngModules,\r\n    NavComponent,\r\n    TimeInputComponent\r\n  ]\r\n})\r\n\r\nexport class SharedModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'musictube';\n}\n","<div fxLayout=\"column\" fxFill>\r\n    <app-nav></app-nav>\r\n    <div class=\"mt-fill\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-youtube-video-wrapper></app-youtube-video-wrapper>","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\r\nimport { YoutubeVideoWrapperModule } from './youtube-video-wrapper/youtube-video-wrapper.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { MetronomeComponent } from './metronome/metronome.component';\r\n\r\nconst ngModules = [\r\n  BrowserAnimationsModule,\r\n  FlexLayoutModule,\r\n  MatInputModule,\r\n  MatSliderModule,\r\n  MatGridListModule,\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    MetronomeComponent\r\n  ],\r\n  imports: [\r\n    ...ngModules,\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    SharedModule,\r\n    YoutubeVideoWrapperModule,\r\n  ],\r\n  exports: [\r\n    ...ngModules\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-metronome',\n  templateUrl: './metronome.component.html',\n  styleUrls: ['./metronome.component.css']\n})\nexport class MetronomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>metronome works!</p>\n","import { Component, Input, EventEmitter, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { YouTubePlayer } from '@angular/youtube-player';\nimport { interval, Subscription } from 'rxjs';\nimport { LoopSettings, VideoSettings } from '../youtube-video-wrapper';\n\n/**\n * Component responsible for interaction with the YouTube video.\n */\n@Component({\n  templateUrl: './youtube-video.component.html',\n  selector: 'app-youtube-video'\n})\nexport class YoutubeVideoComponent implements OnInit, OnDestroy {\n  /**\n   * The YouTube video.\n   */\n  @ViewChild(\"player\", { static: true }) private _youtubePlayer: YouTubePlayer;\n\n  /**\n   * Subscription to the YouTube video's state change event.\n   */\n  private _stateChangeSubscription: Subscription;\n\n  /**\n   * Subscription to the YouTube video's playback rate changed event.\n   */\n  private _playbackRateSubscription: Subscription;\n\n  /**\n   * Subscription to the poll ran when looping.\n   */\n  private _loopPoll: Subscription;\n\n  /**\n   * Flag for when the user is waiting for a loop.\n   */\n  private _waitingForLoop: boolean = false;\n\n  /**\n   * Interval for beep audio on the second when waiting.\n   */\n  private _beepInterval: any;\n\n  /**\n   * The sound played when _beepInterval is counting seconds.\n   */\n  private readonly _beepAudio: HTMLAudioElement = new Audio(\"assets/audio/beep.wav\");\n\n  /**\n   * Private backing for videoSettings.\n   */\n  private _videoSettings: VideoSettings;\n\n  /**\n   * Video settings to be piped through to the youtube video container.\n   */\n  @Input()\n  get videoSettings(): VideoSettings {\n    return this._videoSettings;\n  }\n  set videoSettings(videoSettings: VideoSettings) {\n    this._videoSettings = videoSettings;\n    this._onSettingsChange();\n  }\n\n  /**\n   * Private backing for loopSettings.\n   */\n  private _loopSettings: LoopSettings;\n\n  /**\n   * Getter/Setter for loop settings input\n   */\n  @Input()\n  get loopSettings(): LoopSettings {\n    return this._loopSettings;\n  }\n  set loopSettings(loopSettings: LoopSettings) {\n    this._loopSettings = loopSettings;\n  }\n\n  /**\n   * EventEmitter used when video settings are changed.\n   */\n  @Output() onVideoSettingsChanged = new EventEmitter<VideoSettings>()\n\n  /**\n   * EventEmitter used when loop settings are changed.\n   */\n  @Output() onLoopSettingsChanged = new EventEmitter<LoopSettings>();\n\n  /**\n   * Initialization code.\n   */\n  ngOnInit() {\n    const tag = document.createElement('script');\n\n    tag.src = \"https://www.youtube.com/iframe_api\";\n    document.body.appendChild(tag);\n\n    this._beepAudio.volume = .8;\n\n    this._stateChangeSubscription = this._youtubePlayer.stateChange.subscribe(\n      (value) => {\n        if (value.data == YT.PlayerState.PLAYING) {\n          this.videoSettings.isPlaying = true;\n          this.videoSettings.hasStarted = true;\n\n          // Exit the loop when the user plays before the loop delay has finished.\n          if (this._waitingForLoop) {\n            this.loopSettings.isLooping = false;\n            this._waitingForLoop = false;\n            clearInterval(this._beepInterval);\n            this.onLoopSettingsChanged.emit(this.loopSettings);\n          }\n        }\n        else if (value.data == YT.PlayerState.PAUSED) {\n          this.videoSettings.isPlaying = false;\n          this.videoSettings.hasStarted = true;\n\n          // Exit the loop when the user pauses during it.\n          if (this.loopSettings.isLooping && this._youtubePlayer.getCurrentTime() != this.loopSettings.startTime) {\n            this.loopSettings.isLooping = false;\n            this.onLoopSettingsChanged.emit(this.loopSettings);\n          }\n        }\n        else if (value.data == YT.PlayerState.UNSTARTED) {\n          this.videoSettings.hasStarted = false;\n          this.loopSettings.isLooping = false;\n          this.onLoopSettingsChanged.emit(this.loopSettings);\n        }\n\n        this.videoSettings.videoLength = this._youtubePlayer.getDuration();\n        this.onVideoSettingsChanged.emit(this.videoSettings);\n      }\n    );\n\n    this._playbackRateSubscription = this._youtubePlayer.playbackRateChange.subscribe(\n      (value) => {\n        if (value.data != this._videoSettings.playbackSpeed) {\n          this.videoSettings.playbackSpeed = value.data;\n          this.onVideoSettingsChanged.emit(this.videoSettings);\n        }\n      }\n    )\n\n    this._loopPoll = interval(30)\n      .subscribe(() => {\n        if (!this._waitingForLoop && this.loopSettings.isLooping && this.getCurrentTime() >= this.loopSettings.endTime) {\n          this._loopVideo();\n        }\n      });\n  }\n\n  /**\n   * Cleanup code.\n   */\n  ngOnDestroy(): void {\n    this._stateChangeSubscription.unsubscribe();\n    this._playbackRateSubscription.unsubscribe();\n    this._loopPoll.unsubscribe();\n  }\n\n  /**\n   * Gets the current timestamp of the video in seconds.\n   * @returns The current timestamp of the video in seconds.\n   */\n  getCurrentTime(): number {\n    return this._youtubePlayer.getCurrentTime();\n  }\n\n  /**\n   * Plays video after it was paused during looping.\n   */\n  private _loopVideo(): void {\n    this._youtubePlayer.pauseVideo();\n    this._youtubePlayer.seekTo(this._loopSettings.startTime, true);\n    this._waitingForLoop = true;\n\n    setTimeout(() => {\n      clearInterval(this._beepInterval);\n      this._youtubePlayer.playVideo();\n      this._waitingForLoop = false;\n    }, this._loopSettings.loopDelay * 1000);\n\n    if (this._loopSettings.loopDelay != 0) {\n      this._beepAudio.play();\n      this._beepInterval = setInterval(() => {\n        this._beepAudio.play();\n      }, 1000);\n    }\n  }\n\n  /**\n   * Update the youtube video based on incoming changes.\n   */\n  private _onSettingsChange(): void {\n    if (this.videoSettings.isPlaying) {\n      if (this._youtubePlayer.getPlayerState() != YT.PlayerState.PLAYING) {\n        this._youtubePlayer.playVideo();\n      }\n    }\n    else {\n      if (this._youtubePlayer.getPlayerState() == YT.PlayerState.PLAYING) {\n        this._youtubePlayer.pauseVideo();\n      }\n    }\n\n    if (this._youtubePlayer.getPlaybackRate() != this.videoSettings.playbackSpeed) {\n      this._youtubePlayer.setPlaybackRate(this.videoSettings.playbackSpeed);\n    }\n\n    if (this._youtubePlayer.videoId != this._videoSettings.videoId) {\n      this._youtubePlayer.videoId = this._videoSettings.videoId;\n    }\n  }\n}\n","<mat-card class=\"mt-card-layout\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <youtube-player #player [videoId]=\"videoSettings.videoId\"></youtube-player>\r\n</mat-card>","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { VideoSettings } from '../youtube-video-wrapper';\n\n/**\n * Component used to manage the UI video controls.\n */\n@Component({\n  selector: 'app-youtube-video-controls',\n  templateUrl: './youtube-video-controls.component.html',\n  styleUrls: ['./youtube-video-controls.component.css']\n})\nexport class YoutubeVideoControlsComponent {\n  /**\n   * Storage for video settings\n   */\n  private _videoSettings: VideoSettings;\n\n  /**\n   * Getter/Setter for video settings input\n   */\n  @Input()\n  get videoSettings(): VideoSettings {\n    return this._videoSettings;\n  }\n  set videoSettings(videoSettings: VideoSettings) {\n    this._videoSettings = videoSettings;\n  }\n\n  /**\n   * EventEmitter used when video settings are changed.\n   */\n  @Output() onVideoSettingsChanged = new EventEmitter<VideoSettings>();\n\n  /**\n   * Event handler for when the user clicks the \"Change Video\" button.\n   */\n  onChangeVideo(data: any) {\n    if (data.videoId != this.videoSettings.videoId) {\n      this.videoSettings.videoId = data.videoId;\n      this.videoSettings.playbackSpeed = 1.0; // Reset the playback speed.\n      this.onVideoSettingsChanged.emit(this.videoSettings);\n    }\n  }\n\n  /**\n   * Event handler for when the playback speed slider is changed.\n   * @param value The value represented by the position of the slider.\n   */\n  onChangePlaybackSpeed(value: number) {\n    this.videoSettings.playbackSpeed = value;\n    this.onVideoSettingsChanged.emit(this.videoSettings);\n  }\n\n  /**\n   * Plays the video.\n   */\n  playVideo() {\n    if (!this.videoSettings.isPlaying) {\n      this.videoSettings.isPlaying = true;\n      this.onVideoSettingsChanged.emit(this.videoSettings);\n    }\n  }\n\n  /**\n   * Pauses the video.\n   */\n  pauseVideo() {\n    if (this.videoSettings.isPlaying) {\n      this.videoSettings.isPlaying = false;\n      this.onVideoSettingsChanged.emit(this.videoSettings);\n    }\n  }\n\n  /**\n   * Formats the value shown on the slider thumb.\n   * @param value The value of the slider.\n   * @returns The string representation of the value to be shown on the slider thumb.\n   */\n  formatLabel(value: number) {\n    return value;\n  }\n}\n","<mat-card class=\"mt-card-half\" fxLayout=\"column\" fxLayoutAlign=\"center stretch\">\n    <mat-card-header>Video Controls</mat-card-header>\n\n    <div fxLayout=\"row\" fxFlex=\"0 1 calc(100%)\" fxLayoutAlign=\"center center\">\n        <mat-divider [inset]=\"true\"></mat-divider>\n    </div>\n\n    <!-- Video ID/Change video-->\n    <div fxLayout=\"row\" fxFlex=\"0 1 calc(100%)\" fxLayoutAlign=\"center space-between\" fxLayoutGap=\"20px\">\n        <div fxFlex=\"0 1 calc(20% - 20px)\" fxLayoutAlign=\"end center\">\n            <button mat-raised-button (click)=\"playVideo()\">Start Video</button>\n        </div>\n        <div fxFlex=\"0 1 calc(30% - 20px)\" fxLayoutAlign=\"start center\">\n            <button mat-raised-button color=\"primary\" (click)=\"pauseVideo()\">Pause Video</button>\n        </div>\n\n        <form #videoIdForm=\"ngForm\" (ngSubmit)=\"onChangeVideo(videoIdForm.value)\">\n            <div fxFlex=\"0 1 calc(30% - 20px)\" fxLayoutAlign=\"end center\">\n                <mat-form-field appearance=\"fill\" style=\"margin-right: 10px;\">\n                    <mat-label>Video Id</mat-label>\n                    <input matInput placeholder=\"VideoId\" [ngModel]=\"videoSettings.videoId\" name=\"videoId\">\n                </mat-form-field>\n            </div>\n            <div fxFlex=\"0 1 calc(20% - 20px)\" fxLayoutAlign=\"start center\">\n                <button mat-raised-button color=\"primary\" type=\"submit\" style=\"margin-left: 10px;\">Change Video</button>\n            </div>\n        </form>\n    </div>\n</mat-card>\n\n<mat-card class=\"mt-card-half\" fxLayout=\"column\" fxLayoutAlign=\"center stretch\">\n    <mat-card-header>Playback Speed Controller</mat-card-header>\n\n    <div fxLayout=\"row\" fxFlex=\"0 1 calc(100%)\" fxLayoutAlign=\"center center\">\n        <mat-divider [inset]=\"true\"></mat-divider>\n    </div>\n\n    <!-- Playback speed -->\n    <div fxLayout=\"row\" fxFlex=\"0 1 calc(100%)\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n        <div fxFlex=\"0 1 calc(70% - 20px)\" fxLayoutAlign=\"center center\">\n            <mat-slider [disabled]=\"!videoSettings.hasStarted\" thumbLabel [displayWith]=\"formatLabel\"\n                [ngModel]=\"videoSettings.playbackSpeed\" (change)=\"onChangePlaybackSpeed($event.value)\" tickInterval=\"1\"\n                step=\".05\" min=\".25\" max=\"2.0\" aria-label=\"units\">\n            </mat-slider>\n        </div>\n        <div fxFlex=\"0 1 calc(30% - 20px)\" fxLayoutAlign=\"center center\">\n            <div fxLayout=\"row\" fxFill fxLayoutAlign=\"space-between center\">\n                <label>Current Playback Speed</label>\n                <label>{{videoSettings.playbackSpeed}}</label>\n            </div>\n        </div>\n    </div>\n</mat-card>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\nimport { MarkdownModule } from 'ngx-markdown'\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\n\nimport { YoutubeVideoComponent } from './youtube-video/youtube-video.component';\nimport { YoutubeVideoControlsComponent } from './youtube-video-controls/youtube-video-controls.component';\nimport { YoutubeLoopControlsComponent } from './youtube-loop-controls/youtube-loop-controls.component';\nimport { YoutubeVideoWrapperComponent } from './youtube-video-wrapper.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\nconst ngModules = [\n  FlexLayoutModule,\n  FormsModule,\n  MatButtonModule,\n  MatCardModule,\n  MatDividerModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSliderModule,\n];\n\n@NgModule({\n  declarations: [\n    YoutubeVideoWrapperComponent,\n    YoutubeVideoComponent,\n    YoutubeVideoControlsComponent,\n    YoutubeLoopControlsComponent\n  ],\n  imports: [\n    ...ngModules,\n    CommonModule,\n    HttpClientModule,\n    MarkdownModule.forRoot({ loader: HttpClient }),\n    SharedModule,\n    YouTubePlayerModule\n  ],\n  exports: [\n    ...ngModules,\n    YoutubeVideoWrapperComponent\n  ]\n})\nexport class YoutubeVideoWrapperModule { }","import { Component, EventEmitter, Input, OnInit, Output, ViewChild, SimpleChanges } from '@angular/core';\nimport { TimeInputComponent } from 'src/app/shared/time-input/time-input.component';\nimport { LoopSettings, VideoSettings } from '../youtube-video-wrapper';\n\n/**\n * Component responsible for managing and handling the loop controls.\n */\n@Component({\n  selector: 'app-youtube-loop-controls',\n  templateUrl: './youtube-loop-controls.component.html',\n  styleUrls: ['./youtube-loop-controls.component.css']\n})\nexport class YoutubeLoopControlsComponent {\n  /**\n   * The input element used to manage the loop start time.\n   */\n  @ViewChild(\"startTimeInput\", { static: true }) private _startTimeInput: TimeInputComponent;\n\n  /**\n   * The input element used to manage the loop end time.\n   */\n  @ViewChild(\"endTimeInput\", { static: true }) private _endTimeInput: TimeInputComponent;\n\n  /**\n   * Constant string used for the loop toggle button text to signal that a loop can be started.\n   */\n  private static readonly START_LOOP: string = \"Start Loop\";\n\n  /**\n   * Constant string used for the loop toggle button text to signal that a loop can be stopped.\n   */\n  private static readonly STOP_LOOP: string = \"Stop Loop\";\n\n  /**\n   * The text displayed in the loop toggle button.\n   */\n  loopButtonText: string = YoutubeLoopControlsComponent.START_LOOP;\n\n  /**\n   * Determines whether or not a configuration is valid to loop around.\n   *\n   * @returns True if the loop can be started.\n   */\n  get isLoopValid(): boolean {\n    return this._videoSettings.hasStarted\n      && (this._loopSettings.startTime < this._loopSettings.endTime)\n      && (this._loopSettings.endTime <= this._videoSettings.videoLength);\n  }\n\n  /**\n   * Determines if the capture time buttons should be enabled.\n   *\n   * @return True if the user can interact with the loop times.\n   */\n  get canCaptureTime(): boolean {\n    return !this._loopSettings.isLooping && this.videoSettings.hasStarted;\n  }\n\n  /**\n   * Private backing for loopSettings.\n   */\n  private _loopSettings: LoopSettings;\n\n  /**\n   * Getter/Setter for loop settings input\n   */\n  @Input()\n  get loopSettings(): LoopSettings {\n    return this._loopSettings;\n  }\n  set loopSettings(loopSettings: LoopSettings) {\n    this._loopSettings = loopSettings;\n    this._startTimeInput.setInputValuesBySeconds(loopSettings.startTime);\n    this._endTimeInput.setInputValuesBySeconds(loopSettings.endTime);\n    this.loopButtonText =\n      loopSettings.isLooping ? YoutubeLoopControlsComponent.STOP_LOOP : YoutubeLoopControlsComponent.START_LOOP;\n  }\n\n  /**\n   * Storage for video settings\n   */\n  private _videoSettings: VideoSettings;\n\n  /**\n   * Getter/Setter for video settings input\n   */\n  @Input()\n  get videoSettings(): VideoSettings {\n    return this._videoSettings;\n  }\n  set videoSettings(videoSettings: VideoSettings) {\n    this._videoSettings = videoSettings;\n  }\n\n  /**\n   * EventEmitter used when user requests to capture start time.\n   */\n  @Output() captureStartTimeEvent = new EventEmitter();\n\n  /**\n  * EventEmitter used when user requests to capture end time.\n  */\n  @Output() captureEndTimeEvent = new EventEmitter();\n\n  /**\n   * EventEmitter used when loop settings are changed.\n   */\n  @Output() onLoopSettingsChanged = new EventEmitter<LoopSettings>();\n\n  /**\n   * Event handler for when the user requests the start time to be captured.\n   */\n  onCaptureStartTime() {\n    this.captureStartTimeEvent.emit();\n  }\n\n  /**\n   * Event handler for when the user requests the end time to be captured.\n   */\n  onCaptureEndTime() {\n    this.captureEndTimeEvent.emit();\n  }\n\n  /**\n   * Event handler for when the input element for start time is changed.\n   *\n   * @param seconds The number of seconds currently configured in the input field.\n   */\n  onStartTimeInputChanged(seconds: number) {\n    if (seconds != this._loopSettings.startTime) {\n      this._loopSettings.startTime = seconds;\n      this.onLoopSettingsChanged.emit(this._loopSettings);\n    }\n  }\n\n  /**\n   * Event handler for when the input element for end time is changed.\n   *\n   * @param seconds The number of seconds currently configured in the input field.\n   */\n  onEndTimeInputChanged(seconds: number) {\n    if (seconds != this._loopSettings.endTime) {\n      this._loopSettings.endTime = seconds;\n      this.onLoopSettingsChanged.emit(this._loopSettings);\n    }\n  }\n\n  /**\n   * Event handler for when the input element for loop delay time is changed.\n   *\n   * @param seconds The number of seconds currently configured in the input field.\n   */\n  onLoopLengthInputChanged(seconds: number) {\n    if (seconds != this._loopSettings.loopDelay) {\n      this._loopSettings.loopDelay = seconds;\n      this.onLoopSettingsChanged.emit(this._loopSettings);\n    }\n  }\n\n  /**\n   * Event handler when the toggle loop button is pressed.\n   */\n  toggleLoop() {\n    if (this._loopSettings.isLooping) {\n      this._loopSettings.isLooping = false;\n      this.loopButtonText = YoutubeLoopControlsComponent.START_LOOP;\n    }\n    else {\n      this._loopSettings.isLooping = true;\n      this.loopButtonText = YoutubeLoopControlsComponent.STOP_LOOP;\n    }\n\n    this.onLoopSettingsChanged.emit(this._loopSettings);\n  }\n}\n","<mat-card class=\"mt-card-layout\" fxLayout=\"column\" fxLayoutAlign=\"center stretch\">\r\n    <mat-card-header>Loop Controls</mat-card-header>\r\n\r\n    <div fxLayout=\"row\" fxFlex=\"0 1 calc(100%)\" fxLayoutAlign=\"center center\">\r\n        <mat-divider [inset]=\"true\"></mat-divider>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxFlex=\"0 1 calc(100%)\" fxLayoutAlign=\"center center\">\r\n        <fieldset class=\"no-border\">\r\n            <legend>Start Time</legend>\r\n            <div class=\"time-input-group\">\r\n                <app-time-input #startTimeInput (timeInputChangedEvent)=\"onStartTimeInputChanged($event)\"\r\n                    [fieldsEnabled]=\"canCaptureTime\" [isReadOnly]=\"true\"></app-time-input>\r\n                <button mat-raised-button color=\"primary\" (click)=\"onCaptureStartTime()\"\r\n                    [disabled]=\"!videoSettings.hasStarted\">Capture\r\n                    Start</button>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class=\"no-border\">\r\n            <legend>End Time</legend>\r\n            <div class=\"time-input-group\">\r\n                <app-time-input #endTimeInput (timeInputChangedEvent)=\"onEndTimeInputChanged($event)\"\r\n                    [fieldsEnabled]=\"canCaptureTime\" [isReadOnly]=\"true\"></app-time-input>\r\n                <button mat-raised-button color=\"primary\" (click)=\"onCaptureEndTime()\"\r\n                    [disabled]=\"!videoSettings.hasStarted\">Capture\r\n                    End</button>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n    <div fxLayout=\"row\" fxFlex=\"0 1 calc(100%)\" fxLayoutAlign=\"center center\">\r\n        <fieldset class=\"no-border\">\r\n            <legend>Loop Delay</legend>\r\n            <app-time-input #loopLengthInput (timeInputChangedEvent)=\"onLoopLengthInputChanged($event)\">\r\n            </app-time-input>\r\n        </fieldset>\r\n    </div>\r\n    <div fxLayout=\"row\" fxFlex=\"0 1 calc(100%)\" fxLayoutAlign=\"center center\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"toggleLoop()\" [disabled]=\"!isLoopValid\">\r\n            {{ loopButtonText }}\r\n        </button>\r\n    </div>\r\n</mat-card>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}